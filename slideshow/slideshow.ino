#include <Arduino.h>
#include <U8g2lib.h>

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif
#ifdef U8X8_HAVE_HW_I2C
#include <Wire.h>
#endif

#define u8g_logo_width 64
#define u8g_logo_height 64

U8G2_PCD8544_84X48_1_4W_SW_SPI u8g2(U8G2_R0, /* clock=*/ 9, /* data=*/ 10, /* cs=*/ 13, /* dc=*/ 11, /* reset=*/ 12);  // Nokia 5110 Display

#define thomas_friends_width 84
#define thomas_friends_height 48
const unsigned char thomas_friends_bits[] PROGMEM= {
   0x00, 0x00, 0x00, 0x00, 0x28, 0x52, 0x09, 0x00, 0x80, 0x46, 0x00, 0x08,
   0x00, 0x00, 0x00, 0xa2, 0x4a, 0x09, 0x00, 0x10, 0x40, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x88, 0x34, 0x00, 0x48, 0x30, 0x28, 0x00, 0x03, 0x10, 0x01,
   0x00, 0x80, 0x00, 0x80, 0x00, 0x88, 0x42, 0x00, 0x08, 0x00, 0x00, 0x00,
   0x00, 0x49, 0x00, 0x90, 0x10, 0xa0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x80, 0x50, 0x1b, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x80, 0x00,
   0x00, 0x40, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x80,
   0x10, 0x00, 0x20, 0x0a, 0x08, 0x00, 0x00, 0x00, 0x82, 0x40, 0x00, 0x00,
   0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0x10, 0x40, 0x00, 0xc0, 0x01,
   0xc0, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x82, 0xe0, 0x1b, 0xe0,
   0x0d, 0x00, 0x00, 0x00, 0x80, 0x29, 0xc0, 0x00, 0xe0, 0x07, 0xe0, 0x0d,
   0x00, 0x00, 0x50, 0x00, 0x83, 0xc0, 0xf1, 0xe0, 0x1b, 0xc0, 0x09, 0x08,
   0x0a, 0x80, 0x41, 0x38, 0xc0, 0x7f, 0xe0, 0x1f, 0xe0, 0x0f, 0x80, 0x00,
   0x00, 0x82, 0xc6, 0x00, 0x8c, 0x19, 0x07, 0x00, 0x00, 0x40, 0x00, 0x02,
   0x80, 0x00, 0x02, 0x18, 0xe2, 0x3f, 0x00, 0x00, 0x90, 0x40, 0x00, 0x28,
   0x00, 0x04, 0x60, 0x3c, 0x80, 0x01, 0x00, 0x10, 0x00, 0x00, 0xf0, 0x00,
   0x08, 0x40, 0x04, 0x00, 0x06, 0x00, 0x08, 0x00, 0x00, 0x10, 0x00, 0x13,
   0xc0, 0x1e, 0x3c, 0x08, 0x08, 0x08, 0x81, 0x00, 0x08, 0x00, 0x00, 0x80,
   0x0b, 0xec, 0x10, 0x08, 0x40, 0x00, 0x00, 0x04, 0x00, 0x20, 0x80, 0x00,
   0x00, 0x20, 0x00, 0x64, 0x30, 0x00, 0x90, 0xc0, 0x01, 0x00, 0x00, 0x00,
   0x40, 0x00, 0x64, 0x70, 0x00, 0x0a, 0x20, 0x40, 0x40, 0x04, 0x40, 0x40,
   0x00, 0x04, 0x41, 0x00, 0x3a, 0x70, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00,
   0x04, 0x00, 0x20, 0x3a, 0xf0, 0x00, 0x20, 0x00, 0x00, 0x80, 0x00, 0x04,
   0x00, 0x00, 0x0a, 0x10, 0x00, 0x80, 0x01, 0x0c, 0x00, 0x01, 0x00, 0x00,
   0x00, 0x82, 0x00, 0x00, 0xc0, 0x03, 0x1c, 0x00, 0x01, 0x00, 0x00, 0x00,
   0x02, 0x00, 0x40, 0xd0, 0x03, 0x1c, 0x00, 0x01, 0x88, 0x20, 0x10, 0x00,
   0x10, 0x00, 0x80, 0x00, 0x1c, 0x00, 0x01, 0x08, 0x09, 0x00, 0x02, 0x00,
   0x40, 0x90, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
   0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x04, 0x84, 0x28, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x02, 0xa0, 0x00, 0x41, 0x0a, 0x01, 0x20, 0x00, 0x00, 0x00,
   0x00, 0x01, 0x00, 0x49, 0x00, 0x08, 0x00, 0x10, 0x10, 0x00, 0x00, 0x00,
   0x01, 0x40, 0x5b, 0x6b, 0x13, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01,
   0x00, 0x00, 0x08, 0x20, 0x00, 0xc8, 0x0f, 0x02, 0x00, 0x00, 0x01, 0x20,
   0x00, 0x00, 0x40, 0x00, 0x22, 0x04, 0x00, 0x02, 0x80, 0x00, 0x22, 0x00,
   0x04, 0x00, 0x81, 0xf5, 0x22, 0x00, 0x00, 0x80, 0x00, 0x00, 0x02, 0x28,
   0x09, 0x3c, 0x18, 0x00, 0x00, 0x00, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00,
   0x04, 0x30, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x06, 0x00, 0x04,
   0x58, 0x80, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x9f, 0x04, 0x0c, 0x94,
   0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x80, 0x1f, 0xd5, 0x07, 0x26, 0x00,
   0x03, 0x00, 0x08, 0x02, 0x00, 0x80, 0x9f, 0x0c, 0xf8, 0x43, 0xa5, 0x0d,
   0x00, 0x06, 0x00, 0x02, 0x80, 0x3f, 0x04, 0x11, 0x42, 0x00, 0x29, 0x80,
   0x01, 0x00, 0xf8, 0x8f, 0x3f, 0x04, 0x18, 0x02, 0x01, 0x40, 0x7f, 0x00,
   0x00, 0xf0, 0x07, 0x1f, 0x06, 0x10, 0x64, 0x10, 0x14, 0x00, 0x00, 0x00 };


#define cartoon_robot_free_width 48
#define cartoon_robot_free_height 48
const static unsigned char cartoon_robot_free_bits[] PROGMEM = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f, 0x00, 0x00,
   0x00, 0x00, 0x08, 0x40, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0x00, 0x00,
   0x00, 0x00, 0xc8, 0x4c, 0x88, 0x00, 0x00, 0x00, 0x08, 0x44, 0x08, 0x01,
   0x00, 0x00, 0x08, 0x44, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0x00, 0x01,
   0x00, 0x00, 0x18, 0x60, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0xc8, 0x00,
   0x00, 0x00, 0x00, 0x40, 0x90, 0x00, 0x00, 0x00, 0x40, 0x08, 0x40, 0x00,
   0x00, 0x00, 0x40, 0x08, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x22, 0x00,
   0x00, 0xe0, 0x00, 0x00, 0x30, 0x00, 0x00, 0x30, 0x00, 0x44, 0x0c, 0x00,
   0x00, 0x00, 0xf9, 0x47, 0x02, 0x00, 0x00, 0x08, 0x00, 0x28, 0x00, 0x00,
   0x00, 0x08, 0xc8, 0x23, 0x00, 0x00, 0x00, 0x08, 0x00, 0xaa, 0x00, 0x00,
   0x00, 0x04, 0x00, 0xa2, 0x00, 0x00, 0x00, 0x04, 0xb8, 0xa7, 0x00, 0x00,
   0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x84, 0xfe, 0xff, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00,
   0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x48, 0x48, 0x00, 0x00,
   0x00, 0x00, 0x88, 0x44, 0x00, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00,
   0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00,
   0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfc, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xfe, 0xff, 0x01, 0x00, 0x00, 0x00, 0x02, 0x01, 0x01, 0x00 };

const static unsigned char cartoon_robot_free_wave_bits[] PROGMEM= {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f, 0x00, 0x00,
   0x00, 0x00, 0x08, 0x40, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0x00, 0x00,
   0x00, 0x00, 0xc8, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x00,
   0x00, 0x00, 0x08, 0x44, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0x00, 0x00,
   0x00, 0x00, 0x18, 0x60, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x08, 0x00, 0x00,
   0x00, 0x00, 0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x0e, 0x00,
   0x00, 0xe0, 0x00, 0x00, 0x30, 0x00, 0x00, 0x30, 0x00, 0x44, 0x20, 0x00,
   0x00, 0x00, 0xf9, 0x47, 0x42, 0x00, 0x00, 0x08, 0x00, 0x28, 0x40, 0x00,
   0x00, 0x08, 0xc8, 0x23, 0x90, 0x00, 0x00, 0x08, 0x00, 0xaa, 0xc8, 0x00,
   0x00, 0x04, 0x00, 0xa2, 0x00, 0x00, 0x00, 0x04, 0xb8, 0xa7, 0x00, 0x01,
   0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x08, 0x01,
   0x00, 0x84, 0xfe, 0xff, 0x89, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00,
   0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x48, 0x48, 0x00, 0x00,
   0x00, 0x00, 0x88, 0x44, 0x00, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00,
   0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00,
   0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfc, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xfe, 0xff, 0x01, 0x00, 0x00, 0x00, 0x02, 0x01, 0x01, 0x00 };

#define bullet_train_scaled_width 84
#define bullet_train_scaled_height 38
const unsigned char bullet_train_scaled_bits[] PROGMEM= {
   0x00, 0x00, 0x00, 0xc0, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x80, 0x3f, 0x00, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
   0xff, 0x03, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff,
   0x07, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x03,
   0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x01, 0x00,
   0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0x00, 0x00, 0x00,
   0x00, 0x07, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00,
   0x70, 0x00, 0x00, 0x00, 0xe0, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x07, 0x00, 0x00, 0xf0, 0xff, 0x0f, 0x00, 0x34, 0x00, 0x00, 0x00, 0x38,
   0x00, 0x00, 0xf8, 0xff, 0x07, 0x80, 0xff, 0xff, 0x09, 0x00, 0xc0, 0x01,
   0x00, 0xfc, 0xff, 0x03, 0xe0, 0xff, 0xff, 0xeb, 0x03, 0x00, 0x0c, 0x00,
   0xfe, 0xff, 0x01, 0xf8, 0xff, 0xff, 0xeb, 0xff, 0x17, 0x08, 0x00, 0xff,
   0x7f, 0x00, 0xfc, 0xff, 0xff, 0xeb, 0xff, 0xff, 0x0f, 0x00, 0xff, 0x3f,
   0x00, 0xff, 0xff, 0xff, 0xeb, 0xff, 0xff, 0x0c, 0x80, 0xff, 0x07, 0x80,
   0xff, 0xff, 0xff, 0xeb, 0xbf, 0x00, 0x0c, 0x40, 0x28, 0x00, 0xe0, 0xff,
   0xff, 0xff, 0x09, 0x00, 0x2f, 0x0e, 0x40, 0x00, 0x00, 0xf0, 0xff, 0x05,
   0x00, 0x80, 0x6f, 0xe0, 0x03, 0x20, 0x00, 0x00, 0xf8, 0x00, 0x00, 0xa0,
   0xff, 0x01, 0x7c, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x40, 0xff, 0x07,
   0xc0, 0x1f, 0x00, 0x10, 0x00, 0x00, 0x00, 0x80, 0xff, 0x3f, 0x00, 0xf8,
   0x03, 0x00, 0x08, 0x00, 0x00, 0xc0, 0xff, 0xff, 0x00, 0x00, 0x6f, 0x00,
   0x00, 0x08, 0x00, 0x80, 0xff, 0xff, 0x03, 0x00, 0xf0, 0x0c, 0x00, 0x00,
   0x04, 0x00, 0xe0, 0xff, 0x05, 0x00, 0x00, 0x9e, 0x03, 0x00, 0x00, 0x2c,
   0x00, 0xe0, 0x05, 0x00, 0x00, 0xe0, 0x61, 0x00, 0x00, 0x00, 0xfa, 0x0f,
   0x00, 0x00, 0x00, 0x00, 0xfe, 0x0e, 0x00, 0x00, 0x00, 0x02, 0xf8, 0x00,
   0x00, 0x00, 0xe0, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00,
   0x00, 0xfe, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0xf0,
   0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x80, 0xcf, 0xff,
   0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0xfc, 0xc0, 0x3f, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xfa, 0x07, 0xe0, 0x07, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x02, 0x00, 0x0e, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x04, 0x00, 0x01, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x38, 0x00, 0x81, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
   0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };


void setup() { // put your setup code here, to run once:

  u8g2.begin();
  u8g2.clearBuffer();
  u8g2.setDrawColor(1);
  u8g2.setBitmapMode(1);
}

void loop() { // put your main code here, to run repeatedly:

 u8g2.firstPage();

  do

  {

    u8g2.drawXBMP( 18, 0, cartoon_robot_free_width, cartoon_robot_free_height, cartoon_robot_free_bits);
        
  } while ( u8g2.nextPage() );
 
delay(500);

 u8g2.firstPage();

  do

  {

    u8g2.drawXBMP( 18, 0, cartoon_robot_free_width, cartoon_robot_free_height, cartoon_robot_free_wave_bits);
    
  } while ( u8g2.nextPage() );
 
delay(500);

u8g2.firstPage();

  do

  {

    u8g2.drawXBMP( 0, 5, bullet_train_scaled_width, bullet_train_scaled_height, bullet_train_scaled_bits);
    
  } while ( u8g2.nextPage() );
 
delay(500);

u8g2.firstPage();

  do

  {

    u8g2.drawXBMP( 0, 0, thomas_friends_width, thomas_friends_height, thomas_friends_bits);
    
  } while ( u8g2.nextPage() );
 
delay(500);


}

